\input texinfo
@setfilename manual
@settitle ObjViewer_v2.0
@documentencoding UTF-8

@copying
Copyright © 2023 by pancakeswya
@end copying

@titlepage
@title A little instruction on using ObjViewer
@vskip
@insertcopying
@author HNR
@end titlepage

@ifnottex
@node Top
@top ObjViewer_v2.0
@insertcopying
@end ifnottex

@menu
* General information:: This section provides general information about how 3DViewer works.
* Affine transformations:: This section provides information about the implementation of Affine transformations.
* Obj file:: This section provides information about the list of implemented mathematical functions.
* info:: This section provides information about the possibility of plotting functions.
* Part_1:: This section provides information about the possibility of using a credit calculator.
* Part_2:: This section provides information about the possibility of using a deposit calculator.
@end menu

@node General information
@chapter General information

A program has been developed for visualizing wireframe models in three-dimensional space in the C/C++ programming language using QT Creator version 5.12.@*

@node  Affine transformations
@chapter  Affine transformations

Affine transformation is a mapping of a plane or space into itself, in which parallel lines turn into parallel lines, intersecting - into intersecting, crossing — into crossing.@*
A transformation of a plane is called affine if it is mutually unambiguous and the image of any straight line is a straight line. A transformation (mapping) is called one-to-one (bijective) if it translates different points into different ones, and some point goes to each point.
From an algebraic point of view, an affine transformation is a transformation of the form: f(x) = M * x + v, where M is some kind of invertible matrix, and v is some value.@*

Properties of affine transformations:
@enumerate
@item
The composition of affine transformations is again an affine transformation.
@item
The inverse of the affine transformation is again an affine transformation.
@item
The area ratio is preserved.
@item
The ratio of the lengths of segments on a straight line is preserved.
@end enumerate

Moving@*
where a and b are the x and y values by which the starting point should be moved. Thus, in order to move a point, it is necessary to multiply the displacement matrix by it:
where x and y are the original coordinates of the point, and x1 and y1 are the obtained coordinates of the new point after moving.@*

Turn@*
Clockwise rotation matrix in homogeneous two-dimensional coordinates:
where a is the angle of rotation in two-dimensional space. To obtain the coordinates of a new point, it is also necessary, as well as the displacement matrix, to multiply the rotation matrix by the original point:@*

Scaling@*
The scaling matrix in homogeneous two-dimensional coordinates:
where a and b are the scaling coefficients, respectively, along the OX and OY axes. Obtaining the coordinates of a new point occurs similarly to the cases described above
@node Obj file
@chapter Obj file

Files.obj is a geometry description file format first developed by Wavefront Technologies. The file format is open and accepted by many 3D graphics application vendors.@*

File format .obj is a simple data format that represents only three-dimensional geometry, namely the position of each vertex, the position of the UV coordinates of the texture of each vertex, the normals of the vertices and the faces that define each polygon as a list of vertices and vertices of the texture. obj coordinates do not have units of measurement, but obj files can contain scale information in a human-readable comment line.

@node info
@chapter info

When writing the code, we followed Google Style@*
Unit-test coverage of modules related to model loading and affine transformations is provided.@*
The program provides the ability to.@*
- Load a wireframe model from an obj format file (support only for a list of vertices and surfaces).@*
- Move the model by a given distance relative to the X, Y, Z axes..@*
- Rotate the model by a given angle relative to its X, Y, Z axes.@*
- Scale the model by the specified value.@*
- Output information about the loaded model - file name, number of vertices and edges


@node Part_1
@chapter Part_1
In this part, basic settings and model views are implemented@*
- The program allows you to configure the type of projection (parallel and central)@*
- The program allows you to customize the type (solid, dotted), the color and thickness of the edges, the display method (missing, circle, square), the color and size of the vertices@*
- The program allows you to choose the background color@*
- Settings are saved between restarts of the program@*
@node Part_2
@chapter Part_2
The program has a special mode for recording images and gif animations and is saved to an arbitrary directory@*
- The program allows you to save the received ("rendered") images to a file in many formats@*
- The program allows you to record small "screencasts" using a special button - the current user affine transformations of the uploaded object into gif animation (640x480, 10fps, 5s)@*

@bye